//https://leetcode.com/problems/longest-palindrome/description/?envType=daily-question&envId=2024-06-04

//Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.
//Letters are case sensitive, for example, "Aa" is not considered a palindrome.

//Array Solution
class Solution {
    public int longestPalindrome(String s) {
        int[] count = new int[58];
        int length = s.length();
        int result = 0;

        for(int i = 0; i < length; i++) {
            count[s.charAt(i) - 'A']++;
        }

        for(int j = 0; j < count.length; j++) {
            if(count[j] % 2 == 0) result += count[j];
            else result += count[j] - count[j] % 2;
        }

        if(result < length) result++;

        return result;
    }
}

//HashMap Solution
class Solution {
    public int longestPalindrome(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        int result = 0;

        int length = s.length();
        for(int i = 0; i < length; i++) {
            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
        }

        for(Map.Entry<Character, Integer> it : map.entrySet()) {
            if(it.getValue() % 2 == 0) result += it.getValue();
            else result += it.getValue() - (it.getValue() % 2);
        }
        
        if(result < length) result++;
    
        return result;
    }
}
